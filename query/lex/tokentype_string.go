// Code generated by "stringer -type TokenType"; DO NOT EDIT.

package lex

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Error-0]
	_ = x[Bang-1]
	_ = x[Minus-2]
	_ = x[Less-3]
	_ = x[LessEqual-4]
	_ = x[Equal-5]
	_ = x[BangEqual-6]
	_ = x[GreaterEqual-7]
	_ = x[Greater-8]
	_ = x[Colon-9]
	_ = x[LParen-10]
	_ = x[RParen-11]
	_ = x[String-12]
	_ = x[Literal-13]
}

const _TokenType_name = "ErrorBangMinusLessLessEqualEqualBangEqualGreaterEqualGreaterColonLParenRParenStringLiteral"

var _TokenType_index = [...]uint8{0, 5, 9, 14, 18, 27, 32, 41, 53, 60, 65, 71, 77, 83, 90}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
